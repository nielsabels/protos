// Code generated by MockGen. DO NOT EDIT.
// Source: task/manager.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockwsPublisher is a mock of wsPublisher interface
type MockwsPublisher struct {
	ctrl     *gomock.Controller
	recorder *MockwsPublisherMockRecorder
}

// MockwsPublisherMockRecorder is the mock recorder for MockwsPublisher
type MockwsPublisherMockRecorder struct {
	mock *MockwsPublisher
}

// NewMockwsPublisher creates a new mock instance
func NewMockwsPublisher(ctrl *gomock.Controller) *MockwsPublisher {
	mock := &MockwsPublisher{ctrl: ctrl}
	mock.recorder = &MockwsPublisherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockwsPublisher) EXPECT() *MockwsPublisherMockRecorder {
	return m.recorder
}

// GetWSPublishChannel mocks base method
func (m *MockwsPublisher) GetWSPublishChannel() chan interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWSPublishChannel")
	ret0, _ := ret[0].(chan interface{})
	return ret0
}

// GetWSPublishChannel indicates an expected call of GetWSPublishChannel
func (mr *MockwsPublisherMockRecorder) GetWSPublishChannel() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWSPublishChannel", reflect.TypeOf((*MockwsPublisher)(nil).GetWSPublishChannel))
}
